<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Wallet.API</name>
    </assembly>
    <members>
        <member name="M:Wallet.API.Controllers.AccessController.Login(Wallet.Entities.LoginModel)">
            <summary>
            Ingresar con email y contraseña para obtener token y poder utilizar la API
            </summary>
        </member>
        <member name="M:Wallet.API.Controllers.AccountController.ListAccounts">
            <summary>
            Mostrar lista de cuentas del usuario actual con sus respectivos balances
            </summary>
        </member>
        <member name="M:Wallet.API.Controllers.AccountController.ListBalance">
            <summary>
            Mostrar balances de las cuentas en pesos y dolares del usuario actual
            </summary>
        </member>
        <member name="M:Wallet.API.Controllers.FixedTermDepositController.GetAllUserFixedTermDeposits">
            <summary>
            Listar todos los plazos fijos abiertos por el usuario logueado
            </summary>
        </member>
        <member name="M:Wallet.API.Controllers.FixedTermDepositController.CreateFixedTermDeposit(Wallet.Entities.FixedTermDepositCreateModel)">
            <summary>
            Crea un nuevo plazo fijo
            </summary>
            <response code="200">Plazo fijo creado correctamente</response>
        </member>
        <member name="M:Wallet.API.Controllers.FixedTermDepositController.CloseFixedTermDeposit(System.Nullable{System.Int32})">
            <summary>
            Cierra un plazo fijo en específico por su Id
            </summary>
            <param name="id">Id del plazo fijo</param>
            <response code="200">Plazo fijo cerrado correctamente</response>
        </member>
        <member name="M:Wallet.API.Controllers.TransactionsController.GetAll(System.Nullable{System.Int32})">
            <summary>
            Listar todas las transacciones ordenadas por fecha descendente y paginadas de a 10
            </summary>
            <param name="page">Página</param>
        </member>
        <member name="M:Wallet.API.Controllers.TransactionsController.Create(Wallet.Entities.TransactionCreateModel)">
            <summary>
            Crear una transacción en pesos
            </summary>
        </member>
        <member name="M:Wallet.API.Controllers.TransactionsController.Edit(System.Nullable{System.Int32},Wallet.Entities.TransactionEditModel)">
            <summary>
            Editar una transacción
            </summary>
            <param name="id">Id de la transacción</param>
            <param name="NewTransaction">Transacción</param>
            <returns></returns>
        </member>
        <member name="M:Wallet.API.Controllers.TransactionsController.Details(System.Nullable{System.Int32})">
            <summary>
            Mostrar los detalles de una transacción en específico por Id
            </summary>
            <param name="id">Id de la transacción</param>
            <returns></returns>
        </member>
        <member name="M:Wallet.API.Controllers.TransactionsController.Filter(Wallet.Entities.TransactionFilterModel)">
            <summary>
            Filtrar transacción por campos
            </summary>
            <param name="transaction">Transacción</param>
            <returns></returns>
        </member>
        <member name="M:Wallet.API.Controllers.TransactionsController.BuyCurrencyAsync(Wallet.Entities.TransactionBuyCurrency)">
            <summary>
            Comprar divisas
            </summary>
            <param name="tbc">Transacción</param>
            <returns></returns>
            <remarks>Ingrese si va a comprar o vender, el tipo de divisa y el monto</remarks>
        </member>
        <member name="M:Wallet.API.Controllers.TransactionsController.Transfer(Wallet.Entities.TransferModel)">
            <summary>
            Transferir dinero de una cuenta propia a otra cuenta existente de la misma moneda
            </summary>
            <remarks>Ingrese la cuenta de origen, el monto y por último la cuenta de destino</remarks>
        </member>
        <member name="M:Wallet.API.Controllers.UserController.Register(Wallet.Entities.RegisterModel)">
            <summary>
            Registrar un usuario nuevo con un email único
            </summary>
            <response code="200">Usuario registrado correctamente</response>
        </member>
        <member name="M:Wallet.API.Controllers.UserController.GetUserById(System.Int32)">
            <summary>
            Obtener detalles de un usuario en específico por su id
            </summary>
            <param name="userId">Id del usuario</param>
        </member>
        <member name="M:Wallet.API.Controllers.UserController.GetAll(System.Int32)">
            <summary>
            Mostrar lista paginada de usuarios ordenada por apellido ascendente
            </summary>
            <param name="page">Número de página a mostrar</param>
        </member>
    </members>
</doc>
